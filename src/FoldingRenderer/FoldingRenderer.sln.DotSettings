<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeInspection/ExcludedFiles/FileMasksToSkip/=_002A_002Emin_002Ejs/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">NotRequired</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_REDUNDANT/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/DEFAULT_PRIVATE_MODIFIER/@EntryValue">Implicit</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ACCESSOR_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ACCESSOR_OWNER_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/CASE_BLOCK_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/EMPTY_BLOCK_STYLE/@EntryValue">TOGETHER_SAME_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/EXPLICIT_INTERNAL_MODIFIER/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/EXPLICIT_PRIVATE_MODIFIER/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INVOCABLE_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/OTHER_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ABSTRACT_ACCESSORHOLDER_ON_SINGLE_LINE/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CATCH_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ELSE_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FINALLY_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ANONYMOUSMETHOD_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SIMPLE_EMBEDDED_STATEMENT_STYLE/@EntryValue">ON_SINGLE_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/TYPE_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_EXTENDS_COLON/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_TYPE_PARAMETER_LANGLE/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">230</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_TYPE_PARAMEER_CONSTRAINTS_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">WRAP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_TERNARY_EXPR_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/JavaScriptFormatOther/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&#xD;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
  &lt;TypePattern DisplayName="COM interfaces or structs"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;Or&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Interface" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
        &lt;Kind Is="Struct" /&gt;&#xD;
      &lt;/Or&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;HasMember&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/HasMember&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constructor" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;ImplementsInterface Name="System.IDisposable" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constructor" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;HasAttribute Name="Xunit.FactAttribute" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Constants"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Constant" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Static fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Static /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Instance fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeSetUpAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeTearDownAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Subclasses"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="Default Pattern"&gt;&#xD;
    &lt;Entry DisplayName="Public Delegates" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
          &lt;Kind Is="Delegate" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Public Enums" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
          &lt;Kind Is="Enum" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Static Fields and Constants"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constant" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Field" /&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constant Field" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Constructors"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Constructor" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Static /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Properties, Indexers"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;Kind Is="Indexer" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Interface Implementations" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Member" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry DisplayName="Nested Types"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Type" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=DTO/@EntryIndexedValue">DTO</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=OK/@EntryIndexedValue">OK</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=OTP/@EntryIndexedValue">OTP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=SSL/@EntryIndexedValue">SSL</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/EventHandlerPatternLong/@EntryValue">$object$_On$event$</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Locals/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb_AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=MethodPropertyEvent/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb_AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=TypesAndNamespaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb_AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FBLOCK_005FSCOPE_005FFUNCTION/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FCLASS/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/JavaScriptNaming/UserRules/=JS_005FLOCAL_005FCONSTRUCTOR/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/EventHandlerPatternLong/@EntryValue">$object$_On$event$</s:String>
	<s:String x:Key="/Default/Environment/Hierarchy/Build/SolBuilderDuo/UseMsbuildSolutionBuilder/@EntryValue">NewVersion</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAddAccessorOwnerDeclarationBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateThisQualifierSettings/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002EJavaScript_002ECodeStyle_002ESettingsUpgrade_002EJsCodeFormatterSettingsUpgrader/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002EJavaScript_002ECodeStyle_002ESettingsUpgrade_002EJsParsFormattingSettingsUpgrader/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002EJavaScript_002ECodeStyle_002ESettingsUpgrade_002EJsWrapperSettingsUpgrader/@EntryIndexedValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/Environment/UnitTesting/ParallelProcessesCount/@EntryValue">3</s:Int64>
	<s:Boolean x:Key="/Default/Environment/UnitTesting/SeparateAppDomainPerAssembly/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/UnitTesting/ShadowCopy/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/Environment/UserInterface/ShortcutSchemeName/@EntryValue">None</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Description/@EntryValue">Creates an async unit test</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Field/=MethodName/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Field/=MethodName/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Shortcut/@EntryValue">testasync</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=023798C1411DE2409B1B3A7422436C75/Text/@EntryValue">[Test]&#xD;
public async Task $MethodName$() {&#xD;
  &#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Description/@EntryValue">Creates a new test</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Field/=Method/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Field/=Method/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Shortcut/@EntryValue">test</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=2FBC4D1ECA48944D9B9C33F3446A24F0/Text/@EntryValue">[Test]&#xD;
public void $Method$() {&#xD;
  &#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Field/=Tests/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Field/=Tests/Expression/@EntryValue">getFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Field/=Tests/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/Shortcut/@EntryValue">ctortests</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=4E94803AA46CDA4384317BD50F838FAA/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Description/@EntryValue">Creates a new test class</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Field/=Class/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Field/=Class/Expression/@EntryValue">getFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Field/=Class/InitialRange/@EntryValue">2</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Field/=Class/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Field/=Namespace/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Field/=Namespace/Expression/@EntryValue">fileDefaultNamespace()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Field/=Namespace/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Field/=Namespace/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/Shortcut/@EntryValue">testclass</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=805A4A8B50202F44B27CFD7C777EE003/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Field/=Method/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Field/=Method/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Shortcut/@EntryValue">xtest</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=83DA00F490F4C8459A0E1D539CA95BB3/Text/@EntryValue">[Fact]&#xD;
public async Task $Method$() {&#xD;
  &#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Description/@EntryValue">Creates a new inner class for method tests</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Field/=ClassTests/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Field/=ClassTests/Expression/@EntryValue">getFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Field/=ClassTests/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Field/=MethodName/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Field/=MethodName/Expression/@EntryValue">complete()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Field/=MethodName/InitialRange/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Field/=MethodName/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Shortcut/@EntryValue">testmethod</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=9DD36B0B0632E1468BB3FF2EF8C2A91C/Text/@EntryValue">[TestFixture]&#xD;
public class $MethodName$ : $ClassTests$ {&#xD;
&#xD;
  [SetUp]&#xD;
  public override void SetUp() {&#xD;
    base.SetUp();&#xD;
    _sut.$MethodName$()&#xD;
  }&#xD;
&#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Field/=ClassTests/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Field/=ClassTests/Expression/@EntryValue">getAlphaNumericFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Field/=ClassTests/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Field/=ClassTests/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Field/=MethodName/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Field/=MethodName/InitialRange/@EntryValue">2</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Field/=MethodName/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Shortcut/@EntryValue">xtestmethod</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=A56D2E2FCF8BC64789F79F9FF1F4248E/Text/@EntryValue">&#xD;
public class $MethodName$Tests : $ClassTests$ {&#xD;
&#xD;
  public $MethodName$Tests() {&#xD;
    _sut.$MethodName$()&#xD;
  }&#xD;
&#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Field/=Class/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Field/=Class/Expression/@EntryValue">getAlphaNumericFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Field/=Class/InitialRange/@EntryValue">3</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Field/=Class/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Field/=Namespace/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Field/=Namespace/Expression/@EntryValue">fileDefaultNamespace()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Field/=Namespace/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Field/=Namespace/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Shortcut/@EntryValue">xtestclass</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=B133040BA4712141A26ECF917A296131/Text/@EntryValue">using Xunit;&#xD;
&#xD;
namespace $Namespace$ {&#xD;
  public class $Class$Tests {&#xD;
&#xD;
    private readonly $Class$ _sut;&#xD;
&#xD;
    public $Class$Tests() {&#xD;
      _sut = new $Class$();&#xD;
    }&#xD;
  }&#xD;
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/Comment/@EntryValue">Use FluentAssertions instead of built in Assert for equality checks</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/CustomPatternPlaceholder/=Something/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/CustomPatternPlaceholder/=Something/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/CustomPatternPlaceholder/=Something/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/CustomPatternPlaceholder/=Something/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/CustomPatternPlaceholder/=SomethingElse/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/CustomPatternPlaceholder/=SomethingElse/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/CustomPatternPlaceholder/=SomethingElse/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/CustomPatternPlaceholder/=SomethingElse/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/ReplaceComment/@EntryValue">Replace with .Should().Be()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/ReplacePattern/@EntryValue">$Something$.Should().Be($SomethingElse$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/SearchPattern/@EntryValue">Assert.That($Something$, Is.EqualTo($SomethingElse$));</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=09637803F241FD499A602859534BAEA3/Severity/@EntryValue">SUGGESTION</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/Comment/@EntryValue">Use FluentAssertions instead of HasSamePropertyValues</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/CustomPatternPlaceholder/=actual/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/CustomPatternPlaceholder/=actual/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/CustomPatternPlaceholder/=actual/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/CustomPatternPlaceholder/=actual/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/CustomPatternPlaceholder/=expected/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/CustomPatternPlaceholder/=expected/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/CustomPatternPlaceholder/=expected/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/CustomPatternPlaceholder/=expected/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/ReplaceComment/@EntryValue">Replace with ShouldBeEquivalentTo()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/ReplacePattern/@EntryValue">$actual$.ShouldBeEquivalentTo($expected$)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/SearchPattern/@EntryValue">Assert.That($actual$.HasSamePropertyValuesAs($expected$))</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=218D3B3164DBF6449E4737CFEE6E3A46/Severity/@EntryValue">SUGGESTION</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/Comment/@EntryValue">Use FluentAssertions instead of built in Asserts for not null checks</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/CustomPatternPlaceholder/=Something/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/CustomPatternPlaceholder/=Something/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/CustomPatternPlaceholder/=Something/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/CustomPatternPlaceholder/=Something/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/ReplaceComment/@EntryValue">Replace with .Should().NotBeNull()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/ReplacePattern/@EntryValue">$Something$.Should().NotBeNull();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/SearchPattern/@EntryValue">Assert.That($Something$, Is.Not.Null);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=364403A5B25C074EB1D4148B4C1A12F4/Severity/@EntryValue">WARNING</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/Comment/@EntryValue">Use FluentAssertions instead of built in Assert for null checks</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/CustomPatternPlaceholder/=Something/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/CustomPatternPlaceholder/=Something/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/CustomPatternPlaceholder/=Something/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/CustomPatternPlaceholder/=Something/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/ReplaceComment/@EntryValue">Replace with .Should().BeNull();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/ReplacePattern/@EntryValue">$Something$.Should().BeNull();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/SearchPattern/@EntryValue">Assert.That($Something$, Is.Null);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=8BECEBF0EED4D54EB6DAFD5E25F24AC7/Severity/@EntryValue">SUGGESTION</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/Comment/@EntryValue">Use FluentAssertions instead of AssertEx.TaskThrows</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/CustomPatternPlaceholder/=Expression/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/CustomPatternPlaceholder/=Expression/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/CustomPatternPlaceholder/=Expression/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/CustomPatternPlaceholder/=Expression/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/CustomPatternPlaceholder/=TException/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/CustomPatternPlaceholder/=TException/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/CustomPatternPlaceholder/=TException/Properties/=Type/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/CustomPatternPlaceholder/=TException/Type/@EntryValue">TypePlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/ReplaceComment/@EntryValue">Replace with ShouldThrow</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/ReplacePattern/@EntryValue">new Func&lt;Task&gt;(() =&gt; $Expression$).ShouldThrow&lt;$TException$&gt;();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/SearchPattern/@EntryValue">AssertEx.TaskThrows&lt;$TException$&gt;(() =&gt; $Expression$)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=AC8EF04473F04042A8EF4D48E61D0831/Severity/@EntryValue">SUGGESTION</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/Comment/@EntryValue">Do not use async void in public methods</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=body/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=body/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=body/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=body/Type/@EntryValue">StatementPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=method/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=method/Properties/=CaseSensitive/@EntryIndexedValue">True</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=method/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=method/Properties/=RegEx/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=method/Type/@EntryValue">IdentifierPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=parameters/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=parameters/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=parameters/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/CustomPatternPlaceholder/=parameters/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/ReplaceComment/@EntryValue">Use async Task instead</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/ReplacePattern/@EntryValue">public async Task $method$($parameters$) {&#xD;
  $body$&#xD;
 }</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/SearchPattern/@EntryValue">public async void $method$($parameters$) {&#xD;
  $body$&#xD;
}</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=F12F746AF714B849B562D06083A28ADE/Severity/@EntryValue">ERROR</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/Comment/@EntryValue">Use FluentAssertions instead of Assert for true checks</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/CustomPatternPlaceholder/=Expression/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/CustomPatternPlaceholder/=Expression/Properties/=Maximal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/CustomPatternPlaceholder/=Expression/Properties/=Minimal/@EntryIndexedValue">-1</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/CustomPatternPlaceholder/=Expression/Type/@EntryValue">ArgumentPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/ReplaceComment/@EntryValue">Replace with ...Should().BeTrue()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/ReplacePattern/@EntryValue">$Expression$.Should().BeTrue()</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/SearchPattern/@EntryValue">Assert.That($Expression$, Is.True)</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=FE276377033C9548B8748F2F3A79E454/Severity/@EntryValue">SUGGESTION</s:String></wpf:ResourceDictionary>